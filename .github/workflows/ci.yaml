name: CI
on:
  workflow_dispatch:
  push:

permissions:
  actions: write
  checks: write
  contents: write

# Cancel in-progress runs in current workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sdk-generate:
    name: Generate SDKs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "1.20"
      - run: echo 'GOPATH='"$(go env GOPATH)" >> $GITHUB_ENV
        shell: bash
      - run: |
          wget https://github.com/go-swagger/go-swagger/releases/latest/download/swagger_linux_amd64 -O "$GOPATH/bin/swagger"
          chmod +x "$GOPATH/bin/swagger"
          bash <(curl https://raw.githubusercontent.com/ory/meta/master/install.sh) -b $GOPATH/bin ory
        shell: bash
      - run: make sdk
      - run: |
          git add -N . # 新規ファイルを含める
          if ! git diff --exit-code --quiet
          then
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "Update"
            git push
          fi

  test-e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    needs:
      - sdk-generate
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
        ports:
          - 5432:5432
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: test
        ports:
          - 3306:3306
      mailslurper:
        image: oryd/mailslurper:latest-smtps
        ports:
          - 4436:4436
          - 4437:4437
          - 1025:1025
    env:
      TEST_DATABASE_POSTGRESQL: "postgres://test:test@localhost:5432/postgres?sslmode=disable"
      TEST_DATABASE_MYSQL: "mysql://root:test@(localhost:3306)/mysql?parseTime=true&multiStatements=true"
      TEST_DATABASE_COCKROACHDB: "cockroach://root@localhost:26257/defaultdb?sslmode=disable"
    strategy:
      matrix:
        database: ["postgres", "cockroach", "sqlite", "mysql"]
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          docker create --name cockroach -p 26257:26257 \
            cockroachdb/cockroach:v22.2.6 start-single-node --insecure
          docker start cockroach
        name: Start CockroachDB
      - uses: browser-actions/setup-chrome@latest
        name: Install Chrome
      - uses: browser-actions/setup-firefox@latest
        name: Install Firefox
      - uses: browser-actions/setup-geckodriver@latest
        name: Install Geckodriver
        with:
          geckodriver-version: 0.32.0
      - uses: ory/ci/checkout@master
        with:
          fetch-depth: 2
      - run: |
          npm ci
          cd test/e2e; npm ci
          npm i -g expo-cli
        name: Install node deps
      - run: |
          sudo apt-get install -y moreutils gettext
        name: Install tools
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.19"

      - name: Install selfservice-ui-react-native
        uses: actions/checkout@v3
        with:
          repository: ory/kratos-selfservice-ui-react-native
          path: react-native-ui
      - run: |
          cd react-native-ui
          npm install

      - name: Install selfservice-ui-node
        uses: actions/checkout@v3
        with:
          repository: ory/kratos-selfservice-ui-node
          path: node-ui
      - run: |
          cd node-ui
          npm install

      - name: Install selfservice-ui-react-nextjs
        uses: actions/checkout@v3
        with:
          repository: ory/kratos-selfservice-ui-react-nextjs
          path: react-ui
      - run: |
          cd react-ui
          npm ci

      - run: |
          echo 'RN_UI_PATH='"$(realpath react-native-ui)" >> $GITHUB_ENV
          echo 'NODE_UI_PATH='"$(realpath node-ui)" >> $GITHUB_ENV
          echo 'REACT_UI_PATH='"$(realpath react-ui)" >> $GITHUB_ENV
      - name: "Run Cypress tests"
        run: ./test/e2e/run.sh ${{ matrix.database }}
        env:
          RN_UI_PATH: react-native-ui
          NODE_UI_PATH: node-ui
          REACT_UI_PATH: react-ui
      - if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: test/e2e/*.e2e.log
